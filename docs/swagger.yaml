openapi: 3.0.0
info:
  title: DCBA Mechanisms API
  version: 1.0.0
  description: |
    API documentation for the DCBA Services.

    To interact with **Service API Endpoints**, you must authorize first using a JWT Authorization token:
    1. Click the **Authorize** button at the top-right of this page.
    2. Paste your JWT token without the word "Bearer".
    3. Click **Authorize** and close the dialog.
    4. You can now make authorized requests using the **Try it out** button below.

    **Note**: Currently, the server is not deployed but will be available in the future at the URL specified in the servers section. Therefore, the **Try it out** option is not available right now.

servers:
  - url: https://tango-eu-project.github.io/DCBA-Mechanisms/

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:

  # [1] GET /devices
  /devices:
    get:
      tags:
        - Service API Endpoints  # Tag for service-facing endpoints
      summary: Fetch all devices
      description: Retrieves all device entries from the database. This route requires a valid JWT authorization token to access.
      security:
        - BearerAuth: []  # Requires Bearer token in Authorization header
      responses:
        '200':
          description: Successfully fetched devices
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  message:
                    type: string
                    example: "Devices fetched successfully."
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        device_id:
                          type: string
                          example: "a4e4cf21ab7e"
                        did:
                          type: string
                          example: "did:example:123456789abcdefghi"
                        sub:
                          type: string
                          example: "user@example.com"
        '401':
          description: Authorization token is missing or malformed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
              examples:
                MissingAuthorizationToken:
                  summary: Missing Authorization header
                  value:
                    status: "failed"
                    message: "Authorization token is missing."
                MalformedAuthorizationToken:
                  summary: Malformed Authorization header
                  value:
                    status: "failed"
                    message: "Authorization token is malformed. It should start with 'Bearer '."
        '403':
          description: Invalid or expired authorization token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
              examples:
                ExpiredToken:
                  summary: Token is expired
                  value:
                    status: "failed"
                    message: "Authorization token has expired."
                InvalidToken:
                  summary: Token is invalid
                  value:
                    status: "failed"
                    message: "Invalid Authorization token."
        '500':
          description: Server error while fetching devices
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "failed"
                  message:
                    type: string
                    example: "Error fetching device data."




  # [2] GET /devices/online-shifts  
  /devices/online-shifts:
    get:
      tags:
        - Service API Endpoints  # Tag for service-facing endpoints
      summary: Fetch online devices
      description: Retrieves devices that are currently online. This route requires a valid JWT authorization token to access.
      security:
        - BearerAuth: []  # This specifies that the request requires a Bearer token
      responses:
        '200':
          description: Successfully fetched online devices
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  message:
                    type: string
                    example: 'Fetched online devices successfully.'
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        device_id:
                          type: string
                          example: "a4e4cf21ab7e"
                        did:
                          type: string
                          example: "did:example:123456789abcdefghi"
                        sub:
                          type: string
                          example: "user@example.com"
        '401':
          description: Authorization token is missing or malformed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "failed"
                  message:
                    type: string
                examples:
                  Missing Authorization token:
                    summary: Missing Authorization header
                    value:
                      status: "failed"
                      message: "Authorization token is missing."
                  Malformed Authorization token:
                    summary: Malformed Authorization header
                    value:
                      status: "failed"
                      message: "Authorization token is malformed. It should start with 'Bearer '."
        '403':
          description: Invalid or expired authorization token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "failed"
                  message:
                    type: string
                examples:
                  Expired token:
                    summary: Token has expired
                    value:
                      status: "failed"
                      message: "Authorization token has expired."
                  Invalid token:
                    summary: Token is invalid
                    value:
                      status: "failed"
                      message: "Invalid Authorization token."
        '500':
          description: Server error while fetching online devices
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "failed"
                  message:
                    type: string
                    example: 'Error fetching online devices.'




  /devices/offline-shifts:
    get:
      summary: Fetch offline devices
      description: Retrieves devices that are currently offline.
      responses:
        '200':
          description: Successfully fetched offline devices
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 200
                  statusMessage:
                    type: string
                    example: Fetched offline devices successfully.
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        device_id:
                          type: string
                          example: "a4e4cf21ab7e"
                        did:
                          type: string
                          example: "did:example:123456789abcdefghi"
                        sub:
                          type: string
                          example: "user@example.com"
        '500':
          description: Server error while fetching offline devices
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  statusCode:
                    type: integer
                    example: 500
                  statusMessage:
                    type: string
                    example: Error fetching offline devices.

  /devices/behavioural-score:
    post:
      summary: Fetch behavioural score of a device
      description: Returns the device's behavioural score based on the provided DIDs and JWT authorization.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                didSP:
                  type: string
                  example: "did:example:service-provider"
                didRequester:
                  type: string
                  example: "did:example:123456789abcdefghi"
                jwtAuth:
                  type: string
                  example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
      responses:
        '200':
          description: Successfully fetched behavioural score
          content:
            application/json:
              schema:
                type: object
                properties:
                  behaviouralScore:
                    type: number
                    example: 0.65
        '400':
          description: Missing required fields or invalid data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Missing required fields: didSP, didRequester, or jwtAuth."
        '401':
          description: Unauthorized - Invalid or expired JWT
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Invalid or expired JWT token."
        '404':
          description: Device not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Device not found."

  /devices/last-location:
    post:
      summary: Fetch last known geographic coordinates of a device
      description: Returns the device's last known location using the provided DIDs and JWT authorization.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                didSP:
                  type: string
                  example: "did:example:service-provider"
                didRequester:
                  type: string
                  example: "did:example:device-abc123"
                jwtAuth:
                  type: string
                  example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
      responses:
        '200':
          description: Successfully fetched last known coordinates
          content:
            application/json:
              schema:
                type: object
                properties:
                  lastCoordinates:
                    type: object
                    properties:
                      latitude:
                        type: number
                        example: 37.7749
                      longitude:
                        type: number
                        example: -122.4194
        '400':
          description: Missing required fields or invalid data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Missing required fields: didSP, didRequester, or jwtAuth."
        '401':
          description: Unauthorized - Invalid or expired JWT
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Invalid or expired JWT token."
        '404':
          description: Device not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Device not found."

  /devices/post-logs:
    post:
      summary: Capture Android device logs and perform optional localization.
      tags:
        - Authenticator Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - did
                - log
                - accessToken
              properties:
                did:
                  type: string
                  example: "device-123"
                  description: Decentralized identifier of the device.
                log:
                  type: string
                  example: "12-01 12:00:00.000 I/WifiNetworkScannerN: Found network"
                  description: The raw log data captured from the device.
                accessToken:
                  type: string
                  example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  description: The JWT session token verifying the request source.
      responses:
        '200':
          description: Always returns HTTP 200 with a success or error status in the response body. This prevents the application from crashing due to "Network Axios Error" caused by non-200 responses.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 200
                  statusMessage:
                    type: string
                    example: Logs processed successfully.
              examples:
                Success:
                  value:
                    success: true
                    statusCode: 200
                    statusMessage: Logs processed successfully.
                MalformedLog:
                  value:
                    success: false
                    statusCode: 400
                    statusMessage: Malformed log detected
                MissingLogData:
                  value:
                    success: false
                    statusCode: 400
                    statusMessage: Log data cannot be empty.
                MissingTimestamp:
                  value:
                    success: false
                    statusCode: 400
                    statusMessage: Invalid log data. Missing timestamp.
                MissingAccessToken:
                  value:
                    success: false
                    statusCode: 400
                    statusMessage: Session token is required.
                InvalidTokenFormat:
                  value:
                    success: false
                    statusCode: 401
                    statusMessage: Invalid session token format.
                TokenDecodeFailed:
                  value:
                    success: false
                    statusCode: 401
                    statusMessage: Invalid session token.
                TokenExpired:
                  value:
                    success: false
                    statusCode: 401
                    statusMessage: Session token has expired.
                TokenMismatch:
                  value:
                    success: false
                    statusCode: 401
                    statusMessage: Token did does not match the provided did.
                LocalizationError:
                  value:
                    success: false
                    statusCode: 500
                    statusMessage: Failed to perform localization.
                InfluxStorageError:
                  value:
                    success: false
                    statusCode: 500
                    statusMessage: Failed to store logs in the Influx Database.
                ProcessingError:
                  value:
                    success: false
                    statusCode: 500
                    statusMessage: Internal Server Error

  /devices/access-token-validation:
    post:
      summary: Validate the provided JWT token to ensure it is active and valid.
      tags:
        - Authenticator Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - accessToken
              properties:
                accessToken:
                  type: string
                  example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  description: The JWT session token to be validated.
      responses:
        '200':
          description: Token validation result.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 200
                  statusMessage:
                    type: string
                    example: Valid
                  did:
                    type: string
                    example: "device-123"
                    description: Decentralized Identifier of the device (if valid).
                  sub:
                    type: string
                    example: "auth-subject"
                    description: Subject claim from the token.
                  verifiableCredential:
                    type: object
                    description: Verifiable credential object from the token.
              examples:
                Success:
                  value:
                    success: true
                    statusCode: 200
                    statusMessage: Valid
                    did: "device-123"
                    sub: "auth-subject"
                    verifiableCredential:
                      id: "device-123"
                      issuer: "issuer.example"
                MissingToken:
                  value:
                    success: false
                    statusCode: 200
                    statusMessage: No access token provided. Please log in again.
                InvalidFormat:
                  value:
                    success: false
                    statusCode: 200
                    statusMessage: Invalid token format. Please log in again.
                ExpiredToken:
                  value:
                    success: false
                    statusCode: 200
                    statusMessage: Token expired. Please log in again.
                InternalError:
                  value:
                    success: false
                    statusCode: 200
                    statusMessage: Internal server error. Please try again later.

  /devices/logout:
    post:
      summary: Handle devices logout requests by invalidating the access token.
      tags:
        - Authenticator Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - accessToken
                - did
              properties:
                accessToken:
                  type: string
                  example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  description: The JWT access token to be invalidated.
                did:
                  type: string
                  example: "device-123"
                  description: Decentralized Identifier (DID) of the device requesting logout.
      responses:
        '200':
          description: Logout process result.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 200
                  statusMessage:
                    type: string
                    example: 'Device logged out successfully'
              examples:
                Success:
                  value:
                    success: true
                    statusCode: 200
                    statusMessage: 'Device logged out successfully'
                MissingAccessToken:
                  value:
                    success: false
                    statusCode: 400
                    statusMessage: 'Missing required accessToken parameter.'
                MissingDid:
                  value:
                    success: false
                    statusCode: 400
                    statusMessage: 'Missing required did parameter.'
                InternalError:
                  value:
                    success: false
                    statusCode: 500
                    statusMessage: 'Error handling logout'

  /devices/begin-session:
    post:
      summary: Handle device initiation process using QR scanner.
      tags:
        - Authenticator Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - device_id
                - qr_scanner_state_request
              properties:
                device_id:
                  type: string
                  example: "device-123"
                  description: The device ID initiating the session.
                qr_scanner_state_request:
                  type: string
                  example: "qr-scanner-state-abc123"
                  description: The state request generated by the QR scanner.
                log_file_uri:
                  type: string
                  example: "http://example.com/logfile"
                  description: URI to the log file associated with the session.
      responses:
        '200':
          description: Session initiation process result.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'QR Code generated successfully.'
                  DEVICE_AUTHENTICATION_QR_CODE:
                    type: string
                    description: The base64 encoded QR code for authentication.
                  SESSION_REQUEST:
                    type: object
                    description: The saved session request object containing session details.
              examples:
                Success:
                  value:
                    message: 'QR Code generated successfully.'
                    DEVICE_AUTHENTICATION_QR_CODE: "data:image/png;base64, ...base64encodedQR..."
                    SESSION_REQUEST:
                      device_id: "device-123"
                      qr_scanner_state_request: "qr-scanner-state-abc123"
                      log_file_uri: "http://example.com/logfile"
                MissingDeviceId:
                  value:
                    message: 'Device ID is missing, session request failed.'
                MissingQrScannerStateRequest:
                  value:
                    message: 'QR scanner state request is missing, session request failed.'
                ErrorHandlingSessionRequest:
                  value:
                    message: 'Error handling session request, but proceeding with the process.'
                ErrorReadingCertificate:
                  value:
                    message: 'Error reading the certificate, proceeding with limited access.'
                QRCodeNotFound:
                  value:
                    message: 'QR code not found, but session continues without it.'
                ErrorExtractingQRCode:
                  value:
                    message: 'Failed to extract QR code, but session is still active.'
  
  /devices/auth-callback:
    get:
      summary: Handle authentication callback and retrieve the access token.
      tags:
        - Authenticator Endpoints
      parameters:
        - in: query
          name: code
          required: true
          schema:
            type: string
            example: "authorization-code-xyz123"
          description: The authorization code received after the user has authenticated.
        - in: query
          name: state
          required: true
          schema:
            type: string
            example: "qr-scanner-state-abc123"
          description: The state parameter to validate the request.
      responses:
        '200':
          description: Authentication callback handling result.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 200
                  statusMessage:
                    type: string
                    example: 'Authentication successful!'
                  decodedPayload:
                    type: object
                    properties:
                      did:
                        type: string
                        example: "device-id-123"
                      sub:
                        type: string
                        example: "user-id-456"
        '400':
          description: Missing required parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  statusCode:
                    type: integer
                    example: 400
                  statusMessage:
                    type: string
                    example: 'Missing required parameters: code or state.'
        '500':
          description: Server error during authentication callback.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  statusCode:
                    type: integer
                    example: 500
                  statusMessage:
                    type: string
                    example: 'Authentication failed'
                  details:
                    type: string
                    example: 'Detailed error message here.'
              examples:
                CertificateLoadFailure:
                  value:
                    success: false
                    statusCode: 500
                    statusMessage: 'Failed to load certificate'
                    details: 'Error occurred while reading the certificate file'
                AccessTokenNotReceived:
                  value:
                    success: false
                    statusCode: 500
                    statusMessage: 'Access token not received'
                    details: 'No access token in response'
                InvalidTokenPayload:
                  value:
                    success: false
                    statusCode: 500
                    statusMessage: 'Invalid token payload'
                    details: 'Failed to extract necessary fields from the token payload'
                AuthenticationFailed:
                  value:
                    success: false
                    statusCode: 500
                    statusMessage: 'Authentication failed'
                    details: 'Error during authentication callback processing'
